<Window x:Name="SimpleEntryApplication" x:Class="SimpleEntry.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:WindowGlows="http://GlowWindow.codeplex.com/"
        xmlns:local="clr-namespace:SimpleEntry"
        xmlns:ct="clr-namespace:ChromeTabs;assembly=ChromeTabs"    
        xmlns:cvt="clr-namespace:SimpleEntry.Converter"
        xmlns:views="clr-namespace:SimpleEntry.Views" 
        xmlns:vm="clr-namespace:SimpleEntry.ViewModels"
        xmlns:md="clr-namespace:SimpleEntry.Models" 
        xmlns:busyIndicator="clr-namespace:SimpleEntry.ViewModels.Windows.BusyIndicator"
        WindowStartupLocation="CenterScreen" Width="950" Height="670"
        Background="{DynamicResource Window.Static.Background}" 
        StateChanged="SimpleEntryApplication_StateChanged" SourceInitialized="SimpleEntryApplication_SourceInitialized" 
        WindowState="Normal" Closing="SimpleEntryApplication_Closing" Icon="pack://application:,,,/SimpleEntry;component/SimpleEntry.ico" Title="SimpleEntry" AllowsTransparency="True" WindowStyle="None"
         >
    <!--WindowGlows:GlowManager.EnableGlow="True"
        WindowGlows:GlowManager.ActiveGlowBrush="{DynamicResource GlowManagerBrush}"
        WindowGlows:GlowManager.InactiveGlowBrush="Gray"-->
    <Window.Resources>
        <DataTemplate DataType="{x:Type vm:BuildLibraryViewModel}">
            <views:BuildLibraryUserControl/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:DataEntryFormViewModel}">
            <views:DataEntryFormUserControl/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:ExportDataViewModel}">
            <views:ExportDataUserControl/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:MergeLibraryViewModel}">
            <views:MergeLibraryUserControl/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:AboutViewModel}">
            <views:AboutUserControl/>
        </DataTemplate>
    </Window.Resources>
    <Window.Effect>
        <DropShadowEffect/>
    </Window.Effect>
    <WindowChrome.WindowChrome>
        <WindowChrome CornerRadius="0" GlassFrameThickness="1" UseAeroCaptionButtons="False" NonClientFrameEdges="None"/>
    </WindowChrome.WindowChrome>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="RootBorder" Storyboard.TargetProperty="Opacity" 
                                     Duration="0:0:0.8" From="0" To="1"/>
                    <DoubleAnimation Storyboard.TargetName="spFunc" Storyboard.TargetProperty="Opacity" 
                                     Duration="0:0:0.8" From="0" To="1"/>
                    <DoubleAnimation Storyboard.TargetName="MyChromeTabControl" Storyboard.TargetProperty="Opacity" 
                                     Duration="0:0:0.8" From="0" To="1"/>
                    <ThicknessAnimation Storyboard.TargetName="spFunc" Storyboard.TargetProperty="Margin" 
                                     Duration="0:0:0.8" From="0" To="40,0,0,0"/>
                    <ThicknessAnimation Storyboard.TargetName="tbkStatusMessage" Storyboard.TargetProperty="Margin" 
                                     Duration="0:0:0.8" From="-37,0,0,0" To="3,0,0,0"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
    <Border x:Name="RootBorder" Background="Transparent" BorderThickness="1" BorderBrush="Orange">
        <Grid x:Name="RootGrid" UseLayoutRounding="True" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="80"/>
                <RowDefinition Height="129*"/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <!-- window Header -->
            <Border Grid.RowSpan="2" Grid.ColumnSpan="3">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0" Opacity="0.1">
                        <GradientStop Color="#FF1BA1E2" Offset="0"/>
                        <GradientStop Color="#FF1BA1E2" Offset="0.3"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <!-- title and logo -->
            <StackPanel Orientation="Horizontal">
                <Button x:Name="SystemMenu" Margin="10,0,0,0" 
				Style="{DynamicResource SystemMenuButton}"
				Command="{Binding Source={x:Static SystemCommands.ShowSystemMenuCommand}}" Focusable="False">
                    <!--<Border Margin="8,0" Background="#001BA1E2" VerticalAlignment="Center">
					<Path Data="M191.99,0C191.99,0 90.39,101.6 90.39,101.6 90.39,101.6 25.59,51.2 25.59,51.2 25.59,51.2 0,63.99 0,63.99 0,63.99 0,191.99 0,191.99 0,191.99 25.59,204.79 25.59,204.79 25.59,204.79 90.39,154.39 90.39,154.39 90.39,154.39 191.99,256 191.99,256 191.99,256 256,230.39 256,230.39 256,230.39 256,25.59 256,25.59 256,25.59 191.99,0 191.99,0z M25.59,166.39C25.59,166.39 25.59,89.59 25.59,89.59 25.59,89.59 64,127.99 64,127.99 64,127.99 25.59,166.39 25.59,166.39z M124.34,127.99C124.34,127.99 191.99,75.37 191.99,75.37 191.99,75.37 191.99,180.62 191.99,180.62 191.99,180.62 124.34,127.99 124.34,127.99z" 
						Stretch="Fill" Fill="#ff535353" Width="20" Height="20"/>
				</Border>-->
                    <Viewbox Width="20" Height="20" RenderTransformOrigin="0.5, 0.5" SnapsToDevicePixels="True">
                        <Canvas Width="20" Height="20">
                            <!-- 外黑圆 -->
                            <Path StrokeThickness="1.0" Stroke="#ff000000" StrokeMiterLimit="1.0" Fill="#ff000000" Data="F1 M 15.510,15.527 C 15.510,12.761 13.268,10.518 10.502,10.518 C 7.735,10.518 5.493,8.275 5.493,5.509 C 5.493,2.743 7.735,0.500 10.502,0.500 C 10.503,0.500 10.505,0.500 10.507,0.500 C 16.037,0.503 20.519,4.987 20.519,10.518 C 20.519,16.049 16.037,20.533 10.507,20.536 C 13.271,20.533 15.510,18.292 15.510,15.527 Z"/>
                            <!-- 内白环 -->
                            <Path StrokeThickness="1.0" Stroke="#ff000000" StrokeMiterLimit="1.0" Fill="#ffffffff" Data="F1 M 5.509,5.509 C 5.509,8.275 7.751,10.518 10.517,10.518 C 13.284,10.518 15.526,12.761 15.526,15.527 C 15.526,18.293 13.284,20.536 10.517,20.536 C 10.515,20.536 10.514,20.536 10.512,20.536 C 4.982,20.533 0.500,16.049 0.500,10.518 C 0.500,4.987 4.982,0.503 10.512,0.500 C 7.748,0.503 5.509,2.744 5.509,5.509 Z"/>
                            <!-- 左白鱼 -->
                            <Path StrokeThickness="1.0" Stroke="#ff000000" StrokeMiterLimit="1.0" Fill="#ffffffff" Data="F1 M 8.498,5.509 C 8.498,6.616 9.395,7.513 10.502,7.513 C 11.608,7.513 12.505,6.616 12.505,5.509 C 12.505,4.403 11.608,3.505 10.502,3.505 C 9.395,3.505 8.498,4.403 8.498,5.509 Z"/>
                            <!-- 右黑鱼 -->
                            <Path StrokeThickness="1.0" Stroke="#ff000000" StrokeMiterLimit="1.0" Fill="#ff000000" Data="F1 M 8.498,15.527 C 8.498,16.634 9.395,17.531 10.502,17.531 C 11.608,17.531 12.505,16.634 12.505,15.527 C 12.505,14.421 11.608,13.524 10.502,13.524 C 9.395,13.524 8.498,14.421 8.498,15.527 Z"/>
                        </Canvas>
                        <Viewbox.RenderTransform>
                            <RotateTransform/>
                        </Viewbox.RenderTransform>
                        <Viewbox.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard Name="RotationTaiJi">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(Viewbox.RenderTransform).(RotateTransform.Angle)" To="360" Duration="0:0:4" RepeatBehavior="Forever"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <PauseStoryboard BeginStoryboardName="RotationTaiJi"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <ResumeStoryboard BeginStoryboardName="RotationTaiJi"/>
                            </EventTrigger>
                        </Viewbox.Triggers>
                    </Viewbox>
                </Button>
                <TextBlock x:Name="WindowTitle" Text="SimpleEntry" FontSize="15" Margin="5,0,0,0" VerticalAlignment="Center"
				Foreground="{DynamicResource WindowTitle.Foreground}" />
            </StackPanel>
            <!-- window system buttons -->
            <StackPanel Grid.Column="2" Orientation="Horizontal">
                <Button x:Name="btnMinimize"  ToolTip="最小化"
				Style="{StaticResource SystemButton}"
				Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}" Focusable="False" >
                    <Border>
                        <Path Data="F1M0,6L0,9 9,9 9,6 0,6z" 
						Fill="{DynamicResource SystemButton.FillBrush}"/>
                    </Border>
                </Button>
                <Button x:Name="btnRestore" Visibility="Collapsed" ToolTip="还原"
				Style="{StaticResource SystemButton}" 
				Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}" Focusable="False" >
                    <Border>
                        <Path Data="F1M0,10L0,3 3,3 3,0 10,0 10,2 4,2 4,3 7,3 7,6 6,6 6,5 1,5 1,10z M1,10L7,10 7,7 10,7 10,2 9,2 9,6 6,6 6,9 1,9z" 
						Fill="{DynamicResource SystemButton.FillBrush}"/>
                    </Border>
                </Button>
                <Button x:Name="btnMaximize" ToolTip="最大化"
				Style="{DynamicResource SystemButton}"
				Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}" Focusable="False" >
                    <Border ToolTip="">
                        <Path Data="F1M0,0L0,9 9,9 9,0 0,0 0,3 8,3 8,8 1,8 1,3z" 
						Fill="{DynamicResource SystemButton.FillBrush}"/>
                    </Border>
                </Button>
                <Button x:Name="btnClose" BorderThickness="1" ToolTip="关闭"
				Style="{StaticResource SystemCloseButton}" 
				Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}" Focusable="False">
                    <Border>
                        <Path Data="F1M0,0L2,0 5,3 8,0 10,0 6,4 10,8 8,8 5,5 2,8 0,8 4,4 0,0z" 
						Fill="{DynamicResource SystemButton.FillBrush}" Margin="0,3,0,0"/>
                    </Border>
                </Button>
            </StackPanel>
            <StackPanel Name="spFunc" Grid.Row="1" Grid.ColumnSpan="3" Orientation="Horizontal" VerticalAlignment="Bottom" Margin="40,0,0,0" >
                <Button Width="60" Margin="0,0,20,0" Height="30" Content="建库" FontSize="17" 
                    Style="{DynamicResource CustomButtonStyle}"
                    Command="{Binding AddTabBulidLibraryCommand, IsAsync=True}"/>
                <Button Width="60" Margin="0,0,20,0" Height="30" Content="改库" FontSize="17" 
                    Style="{DynamicResource CustomButtonStyle}"
                    Command="{Binding AddTabModifyLibraryCommand, IsAsync=True}"/>
                <Button Width="60" Margin="0,0,20,0" Height="30" Content="合库" FontSize="17" 
                    Style="{DynamicResource CustomButtonStyle}"
                    Command="{Binding AddTabMergeLibraryCommand, IsAsync=True}"/>
                <Button Width="60" Margin="0,0,20,0" Height="30" Content="录入" FontSize="17" 
                    Style="{DynamicResource CustomButtonStyle}"
                    Command="{Binding AddTabDataEntryCommand, IsAsync=True}"/>
                <Button Width="60" Margin="0,0,20,0" Height="30" Content="导出" FontSize="17" 
                    Style="{DynamicResource CustomButtonStyle}"
                    Command="{Binding AddTabExportCommand, IsAsync=True}"/>
                <Button Width="60" Margin="0,0,20,0" Height="30" Content="关于" FontSize="17" 
                    Style="{DynamicResource CustomButtonStyle}"
                    Command="{Binding AddTabAboutCommand, IsAsync=True}"/>

            </StackPanel>
            <busyIndicator:BusyIndicator Grid.Row="2" Grid.ColumnSpan="3" IsBusy="{Binding IsBusy}">  
            <ct:ChromeTabControl 
			x:Name="MyChromeTabControl"
            ItemsSource="{Binding ItemCollection, IsAsync=True}"
			SelectedItem="{Binding SelectedTab}"
			SelectedTabBrush="WhiteSmoke"
			CanMoveTabs="True"
			IsAddButtonVisible="False"
			CloseTabWhenDraggedOutsideBonds="True"
			DragWindowWithOneTab="True"
			CloseTabCommand="{Binding CloseTabCommand, IsAsync=True}"
			ReorderTabsCommand="{Binding ReorderTabsCommand, IsAsync=True}"
			TabTearTriggerDistance="10" Template="{DynamicResource ChromeTabControlControlTemplate}" Margin="0,5,0,0" SelectionChanged="MyChromeTabControl_SelectionChanged" 
                            >
                <!--We override the control template here to show how you can modify the properties of tab panel and content presenter-->
                <ct:ChromeTabControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type ct:ChromeTabItem}}}"
                          ToolTip="{Binding TabName}">

                            <!--<Border BorderBrush="Orange"
                                BorderThickness="1">-->
                            <TextBlock Text="{Binding TabName}"
                                   TextWrapping="NoWrap"
                                   TextTrimming="CharacterEllipsis"
                                   VerticalAlignment="Center" FontSize="15" Margin="3,1,0,0" />
                            <!--</Border>-->

                            <!--We can implement a context menu for the header here. The ChromeTabItems expose for convenience the following commands, "CloseTabCommand: close the current tab, "CloseAllTabsCommand", and "CloseOtherTabsCommand", which closes all tabs except the current.-->
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="关闭"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}, IsAsync=True}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, IsAsync=True}" />
                                    <MenuItem Header="关闭所有"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseAllTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, IsAsync=True}" />
                                    <MenuItem Header="除此之外全部关闭"
                                          Command="{Binding Path=PlacementTarget.Tag.CloseOtherTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}, IsAsync=True}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, IsAsync=True}"
                                          CommandParameter="{Binding}" />
                                </ContextMenu>
                            </Grid.ContextMenu>
                        </Grid>
                    </DataTemplate>
                </ct:ChromeTabControl.ItemTemplate>
            </ct:ChromeTabControl>
            </busyIndicator:BusyIndicator>
            <StatusBar Grid.ColumnSpan="3" Grid.Row="3" Style="{DynamicResource StatusBarStyle}" Focusable="False">
                <TextBlock x:Name="tbkStatusMessage" Text="{Binding Path=StatusMessage, Source={x:Static md:Status.Instance}, UpdateSourceTrigger=PropertyChanged, IsAsync=True}" 
                       Foreground="White" Margin="3,0,0,0" VerticalAlignment="Center"/>
            </StatusBar>
        </Grid>
    </Border>
</Window>
