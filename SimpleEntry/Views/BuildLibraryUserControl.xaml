<UserControl x:Class="SimpleEntry.Views.BuildLibraryUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cvt="clr-namespace:SimpleEntry.Converter"
             xmlns:sv="clr-namespace:SimpleEntry.Services"
             mc:Ignorable="d" 
             d:DesignHeight="420" d:DesignWidth="676">
    <UserControl.Resources>
        <cvt:QuestionTypeToDataTypeConverter x:Key="cvtQTypeToDataType"/>
        <cvt:QuestionTypeToOptionsConverter x:Key="cvtQTypeToOptions"/>
        <!--<cvt:BuildFormValidation x:Key="cvtHasErrorToEnabled"/>-->
        <!--<cvt:IsQuestionNumberExistConverter x:Key="cvtSaveOrUpdate"/>-->
        <cvt:IsFinishButtonVisible x:Key="cvtVisible"/>
        <cvt:QuestionTypeToJumpEnabled x:Key="cvtJumpEnable"/>
        <cvt:QuestionTypeToRepeatEnabled x:Key="cvtRepeatEnable"/>
        <cvt:ValueRangeIsEnabledConverter x:Key="cvtVR"/>
        <cvt:PatternIsEnabledConverter x:Key="cvtPt"/>
        <cvt:QuestionTypeToValueLableConverter x:Key="cvtQTypeToValueLable"/>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="UserControl.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity"
                                     Duration="0:0:0.8" From="0" To="1"/>
                    <ThicknessAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="Margin"
                                     Duration="0:0:0.8" From="0" To="15,0,0,0"/>
                    <DoubleAnimation Storyboard.TargetName="bdButton" Storyboard.TargetProperty="Opacity"
                                     Duration="0:0:0.8" From="0" To="1"/>
                    <ThicknessAnimation Storyboard.TargetName="bdButton" Storyboard.TargetProperty="Margin"
                                     Duration="0:0:0.8" From="-15,15,0,0" To="0,15,0,0"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Border Name="border" BorderBrush="Transparent" BorderThickness="1">
            <!--MainGrid Validation.Error="Grid_Error" Loaded="Grid_Loaded"-->
            <Grid x:Name="DataGrid"  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="130"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="1.8*" MinWidth="479"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <DockPanel LastChildFill="True" Margin="0,20,0,0">
                    <Slider Orientation="Vertical" Maximum="100" AutoToolTipPlacement="BottomRight" 
                            ToolTip="拖动以调整字体大小" Focusable="False"
    					    Value="{Binding FontSize, ElementName=tbQContent, IsAsync=True}" />
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <TextBox x:Name="tbQContent" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" 
                                 Padding="0,3,0,0" TextWrapping="Wrap"  Background="#7FFFFFFF" FontSize="15" 
                            Style="{DynamicResource TextBoxStyle}"
    						Validation.ErrorTemplate="{StaticResource ErrorTemplatePopoutWindow}" 
                            Text="{Binding QuestionInfo.QuestionContent, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" Margin="2" />
                    </ScrollViewer>
                </DockPanel>
                <GridSplitter Grid.Column="1" Width="3" HorizontalAlignment="Center" Margin="0,20,0,0"/>
                <DockPanel Grid.Column="2">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel x:Name="stackPanel" DockPanel.Dock="Top" Grid.ColumnSpan="2">
                            <DockPanel LastChildFill="True" Margin="0,20,0,0">
                                <TextBlock TextWrapping="Wrap" Text="题号：" Margin="52,0,10,0" FontSize="16"/>
                                <TextBox x:Name="tbQNumber" TextWrapping="Wrap"  FontSize="15" Margin="0,0,52,0" 
    								Style="{DynamicResource TextBoxStyle}"
    								Validation.ErrorTemplate="{StaticResource ErrorTemplatePopoutWindow}" 
                                    Text="{Binding QuestionInfo.QuestionNumber, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="0,20,0,0">
                                <TextBlock TextWrapping="Wrap" Text="题型：" Margin="52,0,10,0" FontSize="16"/>
                                <ComboBox x:Name="combQType" Margin="0,0,52,0" DisplayMemberPath="QType"
                                          ItemsSource="{Binding QuestionTypes}" 
                                          SelectedIndex="{Binding QuestionInfo.QuestionTypeID, Mode=TwoWay, NotifyOnSourceUpdated=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, IsAsync=True}"
                                          Style="{DynamicResource ComboBoxStyle}"
    								      Validation.ErrorTemplate="{StaticResource ErrorTemplatePopoutWindow}" >
                                </ComboBox>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="0,20,0,0">
                                <TextBlock TextWrapping="Wrap" Text="字段：" Margin="52,0,10,0" FontSize="16"/>
                                <TextBox x:Name="tbQField" TextWrapping="Wrap"  FontSize="15" Margin="0,0,52,0"
    								     ToolTip="如果为空，将会以&quot;Q+题号&quot;的方式自动命名" 
                                         Style="{DynamicResource TextBoxStyle}" 
                                         Text="{Binding QuestionInfo.QuestionField, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                                         Validation.ErrorTemplate="{StaticResource ErrorTemplatePopoutWindow}"/>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="0,20,0,0">
                                <TextBlock TextWrapping="Wrap" Text="标签：" Margin="52,0,10,0" FontSize="16"/>
                                <TextBox x:Name="tbQLable" TextWrapping="Wrap"  FontSize="15" Margin="0,0,52,0"
    								Text="{Binding QuestionInfo.QuestionLable, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" 
                                    Style="{DynamicResource TextBoxStyle}"
    						        Validation.ErrorTemplate="{StaticResource ErrorTemplatePopoutWindow}"/>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="0,20,0,0">
                                <TextBlock TextWrapping="Wrap" Text="选项：" Margin="52,0,10,0" FontSize="16"/>
                                <CheckBox Content="其他" FontSize="15" Margin="0,0,10,0" VerticalContentAlignment="Center"  VerticalAlignment="Center" 
    								IsChecked="{Binding QuestionInfo.OtherOption, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, IsAsync=True}" 
                                          IsEnabled="{Binding SelectedIndex, Converter={StaticResource cvtQTypeToOptions}, ElementName=combQType, IsAsync=True}" 
                                         IsEnabledChanged="cbJump_IsEnabledChanged"/>
                                <TextBox x:Name="tbOptionsCount" TextWrapping="Wrap"  FontSize="15" Margin="0,0,52,0" 
    								Style="{DynamicResource TextBoxStyle}"
    								Validation.ErrorTemplate="{StaticResource ErrorTemplatePopoutWindow}" 
                                         Text="{Binding QuestionInfo.OptionsCount, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" 
                                         IsEnabled="{Binding SelectedIndex, Converter={StaticResource cvtQTypeToOptions}, ElementName=combQType, IsAsync=True}" 
                                         ToolTip="输入选项个数"/>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="0,20,0,0">
                                <TextBlock TextWrapping="Wrap" Text="值标签：" Margin="36,0,10,0" FontSize="16"/>
                                <TextBox x:Name="tbQValueLable" TextWrapping="Wrap"  FontSize="15" Margin="0,0,52,0" 
                                         ToolTip="以逗号分隔，必须与选项个数相等"
    								     Text="{Binding QuestionInfo.ValueLable, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" 
                                         Style="{DynamicResource TextBoxStyle}" 
                                         Validation.ErrorTemplate="{StaticResource ErrorTemplatePopoutWindow}"
                                         IsEnabled="{Binding SelectedIndex, Converter={StaticResource cvtQTypeToValueLable}, ElementName=combQType, IsAsync=True}" />
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="0,20,0,0">
                                <TextBlock TextWrapping="Wrap" Text="数据类型：" Margin="20,0,10,0" FontSize="16" IsEnabled="False"/>
                                <ComboBox x:Name="combQDataType" Margin="0,0,52,0" DisplayMemberPath="DType"
                                          ItemsSource="{Binding DataTypes}" 
                                          SelectedIndex="{Binding QuestionInfo.DataTypeID, Mode=TwoWay, NotifyOnSourceUpdated=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, IsAsync=True}" 
                                          IsEnabled="{Binding SelectedIndex, Converter={StaticResource cvtQTypeToDataType}, ElementName=combQType, IsAsync=True}"
                                          Style="{DynamicResource ComboBoxStyle}"
    								      Validation.ErrorTemplate="{StaticResource ErrorTemplatePopoutWindow}" >
                                </ComboBox>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="0,20,0,0">
                                <TextBlock TextWrapping="Wrap" Text="取值范围：" Margin="20,0,10,0" FontSize="16" IsEnabled="False"/>
                                <TextBox x:Name="tbValueRange" TextWrapping="Wrap"  FontSize="15" Margin="0,0,52,0" 
    								Style="{DynamicResource TextBoxStyle}"
    								Validation.ErrorTemplate="{StaticResource ErrorTemplatePopoutWindow}" 
                                    Text="{Binding QuestionInfo.ValueRange, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" 
                                    >
                                    <TextBox.IsEnabled>
                                        <MultiBinding Converter="{StaticResource cvtVR}">
                                            <Binding Path="IsEnabled" ElementName="combQDataType" IsAsync="True"/>
                                            <Binding Path="SelectedIndex" ElementName="combQDataType" IsAsync="True"/>
                                        </MultiBinding>
                                    </TextBox.IsEnabled>
                                </TextBox>
                            </DockPanel>
                            <DockPanel LastChildFill="True" Margin="0,20,0,0">
                                <TextBlock TextWrapping="Wrap" Text="正则表达式：" Margin="4,0,10,0" FontSize="16" IsEnabled="False"/>
                                <TextBox x:Name="tbPattern" TextWrapping="Wrap"  FontSize="15" Margin="0,0,52,0" 
    								Style="{DynamicResource TextBoxStyle}"
    								Validation.ErrorTemplate="{StaticResource ErrorTemplatePopoutWindow}" 
                                    Text="{Binding QuestionInfo.Pattern, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" 
                                    >
                                    <TextBox.IsEnabled>
                                        <MultiBinding Converter="{StaticResource cvtPt}">
                                            <Binding Path="IsEnabled" ElementName="combQDataType" IsAsync="True"/>
                                            <Binding Path="SelectedIndex" ElementName="combQDataType" IsAsync="True"/>
                                        </MultiBinding>
                                    </TextBox.IsEnabled>
                                </TextBox>
                            </DockPanel>
                            <GroupBox x:Name="gbCheck" BorderThickness="1" Margin="2,20,52,0" Header="Check约束：" FontSize="15">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox x:Name="cbMustEnter" Grid.Column="0" Content="非空" FontSize="15" Margin="99,1,15,0" VerticalAlignment="Center" 
    										IsChecked="{Binding QuestionInfo.IsMustEnter, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, IsAsync=True}" 
                                              />
                                    <CheckBox x:Name="cbRepeat" Grid.Column="1" Content="重复" FontSize="15" Margin="0,1,15,0" VerticalAlignment="Center" 
    										  IsChecked="{Binding QuestionInfo.IsRepeat, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, IsAsync=True}" 
                                              IsEnabled="{Binding QuestionInfo.QuestionTypeID,Mode=TwoWay, Converter={StaticResource cvtRepeatEnable}, IsAsync=True}" 
                                              IsEnabledChanged="cbRepeat_IsEnabledChanged"/>
                                    <CheckBox Grid.Column="2" x:Name="cbJump" Content="跳转" FontSize="15" Margin="0,1,15,0" VerticalAlignment="Center" 
    										  IsChecked="{Binding QuestionInfo.IsJump, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnDataErrors=True, ValidatesOnExceptions=true, IsAsync=True}"
                                              IsEnabled="{Binding QuestionInfo.QuestionTypeID,Mode=TwoWay, Converter={StaticResource cvtJumpEnable}, IsAsync=True}" 
                                              IsEnabledChanged="cbJump_IsEnabledChanged" 
                                              >
                                    </CheckBox>
                                    <TextBlock Grid.Column="3" VerticalAlignment="Center" Margin="0,0,5,0">从</TextBlock>
                                    <TextBox Grid.Column="4" x:Name="tbJumpConditions" FontSize="15" MinWidth="35"
                                            IsEnabled="{Binding IsChecked, ElementName=cbJump,Mode=TwoWay, IsAsync=True}" 
                                            Style="{DynamicResource TextBoxStyle}"
    								        Validation.ErrorTemplate="{StaticResource ErrorTemplatePopoutWindow}" 
                                             Text="{Binding QuestionInfo.JumpConditions, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
                                    <TextBlock Grid.Column="5" VerticalAlignment="Center" Margin="5,0">到</TextBlock>
                                    <TextBox Grid.Column="6" x:Name="tbJumpTarget" FontSize="15" MinWidth="35"
                                            IsEnabled="{Binding IsChecked, ElementName=cbJump,Mode=TwoWay, IsAsync=True}" 
                                            Style="{DynamicResource TextBoxStyle}"
    								        Validation.ErrorTemplate="{StaticResource ErrorTemplatePopoutWindow}" 
                                            Text="{Binding QuestionInfo.JumpTarget, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                                </Grid>
                            </GroupBox>
                        </StackPanel>
                    </ScrollViewer>
                </DockPanel>
            </Grid>
        </Border>
        <Border Name="bdButton" Grid.Row="1" BorderThickness="0,2,0,0" BorderBrush="#FF995709" Margin="0,15,0,0">
            <StackPanel Name="spButton" Orientation="Horizontal" Margin="0,10" HorizontalAlignment="Center">
                <Button x:Name="btnFirst" Height="26" Width="60" Margin="0,0,15,0" Content="|&lt;" 
    					Style="{DynamicResource CustomButtonStyle}"
    					Command="{Binding FirstRecordCommand, IsAsync=True}"/>
                <Button x:Name="btnPrev" Width="60" Margin="0,0,15,0" Content="&lt;" 
    					Style="{DynamicResource CustomButtonStyle}"
    					Command="{Binding PreviousRecordCommand, IsAsync=True}"/>
                <Button x:Name="btnNext" Width="60" Margin="0,0,15,0" Content="&gt;" 
    					Style="{DynamicResource CustomButtonStyle}"
    					Command="{Binding NextRecordCommand, IsAsync=True}"/>
                <Button x:Name="btnLast" Width="60" Margin="0" Content="&gt;|" 
    					Style="{DynamicResource CustomButtonStyle}"
    					Command="{Binding LastRecordCommand, IsAsync=True}"/>
                <TextBox x:Name="tbSearch" MinWidth="60" Margin="15,0,10,0" Padding="0,4,0,0" HorizontalContentAlignment="Right" MaxWidth="60"
    					Style="{DynamicResource TextBoxStyle}"
    					Validation.ErrorTemplate="{StaticResource ErrorTemplatePopoutWindow}"  
                        Text="{Binding SearchTextBox.SearchQuestionNumber, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, IsAsync=True}"/>
                <Button x:Name="btnSearch" Width="60" Margin="0" Content="查询" 
    					Style="{DynamicResource CustomButtonStyle}"
    					Command="{Binding SearchRecordCommand, IsAsync=True}"/>
                <Button x:Name="btnDelete" Height="26" Width="60" Margin="15,0" Content="删除" 
    					Style="{DynamicResource CustomButtonStyle}"
    					Command="{Binding DeleteRecordCommand, IsAsync=True}"/>
                <Button x:Name="btnSave" Width="60" Margin="0,0,15,0"
    					Style="{DynamicResource CustomButtonStyle}"
    					Command="{Binding InsertRecordCommand, IsAsync=True}"
                        Content="{Binding ButtonContentSaveOrUpdate.SaveOrUpdateName, NotifyOnSourceUpdated=True}"/>
                <!--, Converter={StaticResource cvtSaveOrUpdate}-->
                <Button x:Name="btnFinish" Width="60" Margin="0" Content="完成" 
    					Style="{DynamicResource CustomButtonStyle}"
    					Command="{Binding CreateNewFileCommand, IsAsync=True}"
                           Visibility="{Binding TabName,Converter={StaticResource cvtVisible}, IsAsync=True}"/>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
